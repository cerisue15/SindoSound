{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/cerigoff/instagram_redesign_release_v1/frontend/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as firebase from 'firebase';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from \"./redux/reducers\";\nimport thunk from 'redux-thunk';\nimport { container } from \"./components/styles\";\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nconsole.disableYellowBox = true;\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCJCTEz6cT2aThg13Bw_p3ZyI9vuuyu5Fg\",\n  authDomain: \"sindosound-4d6fd.firebaseapp.com\",\n  databaseURL: \"https://sindosound-4d6fd.firebaseio.com\",\n  projectId: \"sindosound-4d6fd\",\n  storageBucket: \"sindosound-4d6fd.appspot.com\",\n  messagingSenderId: \"966426368081\",\n  appId: \"1:966426368081:web:dd3f75e97eda2d219ec070\",\n  measurementId: \"G-F90VCHPTM0\"\n};\n\nvar logo = require(\"./assets/logo.png\");\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport RegisterScreen from \"./components/auth/Register\";\nimport LoginScreen from \"./components/auth/Login\";\nimport MainScreen from \"./components/Main\";\nimport AddScreen from \"./components/main/add/Add\";\nimport SaveScreen from \"./components/main/add/Save\";\nimport EditScreen from \"./components/main/Edit\";\nimport ChatScreen from \"./components/main/chat/Chat\";\nimport ChatListScreen from \"./components/main/chat/List\";\nimport CommentScreen from \"./components/main/Comment\";\nimport PostScreen from \"./components/main/Post\";\nvar Stack = createStackNavigator();\nfirebase.auth().signOut();\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(Image, {\n          style: container.splash,\n          source: logo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }\n        });\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Navigator, {\n          initialRouteName: \"Login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          navigation: this.props.navigation,\n          options: {\n            headerShown: false\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          navigation: this.props.navigation,\n          component: LoginScreen,\n          options: {\n            headerShown: false\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }\n        })));\n      }\n\n      return React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }\n      }, React.createElement(NavigationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Main\",\n        component: MainScreen,\n        options: {\n          headerShown: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Add\",\n        component: AddScreen,\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Save\",\n        component: SaveScreen,\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Post\",\n        component: PostScreen,\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Chat\",\n        component: ChatScreen,\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"ChatList\",\n        component: ChatListScreen,\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Edit\",\n        component: EditScreen,\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Comment\",\n        component: CommentScreen,\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["/Users/cerigoff/instagram_redesign_release_v1/frontend/App.js"],"names":["React","Component","firebase","Provider","createStore","applyMiddleware","rootReducer","thunk","container","store","console","disableYellowBox","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","logo","require","apps","length","initializeApp","NavigationContainer","createStackNavigator","RegisterScreen","LoginScreen","MainScreen","AddScreen","SaveScreen","EditScreen","ChatScreen","ChatListScreen","CommentScreen","PostScreen","Stack","auth","signOut","App","props","state","loaded","onAuthStateChanged","user","setState","loggedIn","splash","navigation","headerShown"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { Image } from 'react-native'\n\nimport * as firebase from 'firebase'\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './redux/reducers'\nimport thunk from 'redux-thunk'\n\nimport { container } from './components/styles'\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nconsole.disableYellowBox = true;\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCJCTEz6cT2aThg13Bw_p3ZyI9vuuyu5Fg\",\n  authDomain: \"sindosound-4d6fd.firebaseapp.com\",\n  databaseURL: \"https://sindosound-4d6fd.firebaseio.com\",\n  projectId: \"sindosound-4d6fd\",\n  storageBucket: \"sindosound-4d6fd.appspot.com\",\n  messagingSenderId: \"966426368081\",\n  appId: \"1:966426368081:web:dd3f75e97eda2d219ec070\",\n  measurementId: \"G-F90VCHPTM0\"\n};\n\nconst logo = require('./assets/logo.png')\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig)\n}\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport RegisterScreen from './components/auth/Register'\nimport LoginScreen from './components/auth/Login'\nimport MainScreen from './components/Main'\nimport AddScreen from './components/main/add/Add'\nimport SaveScreen from './components/main/add/Save'\nimport EditScreen from './components/main/Edit'\nimport ChatScreen from './components/main/chat/Chat'\nimport ChatListScreen from './components/main/chat/List'\nimport CommentScreen from './components/main/Comment'\nimport PostScreen from './components/main/Post'\n\n\nconst Stack = createStackNavigator();\n\nfirebase.auth().signOut();\n\nexport class App extends Component {\n  constructor(props) {\n    super()\n    this.state = {\n      loaded: false,\n    }\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (!user) {\n        this.setState({\n          loggedIn: false,\n          loaded: true,\n        })\n      } else {\n        this.setState({\n          loggedIn: true,\n          loaded: true,\n        })\n      }\n    })\n  }\n  render() {\n    const { loggedIn, loaded } = this.state;\n    if (!loaded) {\n      return (\n        <Image style={container.splash} source={logo} />\n      )\n    }\n\n    if (!loggedIn) {\n      return (\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName=\"Login\">\n            <Stack.Screen name=\"Register\" component={RegisterScreen} navigation={this.props.navigation} options={{ headerShown: false }} />\n            <Stack.Screen name=\"Login\" navigation={this.props.navigation} component={LoginScreen} options={{ headerShown: false }} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      );\n    }\n    \n    return (\n      <Provider store={store}>\n        <NavigationContainer >\n          <Stack.Navigator initialRouteName=\"Main\">\n            <Stack.Screen name=\"Main\" component={MainScreen} options={{ headerShown: false }} />\n            <Stack.Screen name=\"Add\" component={AddScreen} navigation={this.props.navigation} />\n            <Stack.Screen name=\"Save\" component={SaveScreen} navigation={this.props.navigation} />\n            <Stack.Screen name=\"Post\" component={PostScreen} navigation={this.props.navigation} />\n            <Stack.Screen name=\"Chat\" component={ChatScreen} navigation={this.props.navigation} />\n            <Stack.Screen name=\"ChatList\" component={ChatListScreen} navigation={this.props.navigation} />\n            <Stack.Screen name=\"Edit\" component={EditScreen} navigation={this.props.navigation} />\n            <Stack.Screen name=\"Comment\" component={CommentScreen} navigation={this.props.navigation} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}