{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/cerigoff/instagram_redesign_release_v1/frontend/components/main/Comment.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUsersData } from \"../../redux/actions/index\";\nimport { container, utils, text } from \"../styles\";\nimport { timeDifference } from \"../utils\";\n\nfunction Comment(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postId = _useState4[0],\n      setPostId = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      input = _useState6[0],\n      setInput = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      refresh = _useState8[0],\n      setRefresh = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      textInput = _useState10[0],\n      setTextInput = _useState10[1];\n\n  useEffect(function () {\n    getComments();\n  }, [props.route.params.postId, props.users, refresh]);\n\n  var matchUserToComment = function matchUserToComment(comments) {\n    var _loop = function _loop(i) {\n      if (comments[i].hasOwnProperty('user')) {\n        return \"continue\";\n      }\n\n      var user = props.users.find(function (x) {\n        return x.uid === comments[i].creator;\n      });\n\n      if (user == undefined) {\n        props.fetchUsersData(comments[i].creator, false);\n      } else {\n        comments[i].user = user;\n      }\n    };\n\n    for (var i = 0; i < comments.length; i++) {\n      var _ret = _loop(i);\n\n      if (_ret === \"continue\") continue;\n    }\n\n    setComments(comments);\n    setRefresh(false);\n  };\n\n  var getComments = function getComments() {\n    if (props.route.params.postId !== postId || refresh) {\n      console.log(props.route.params.uid);\n      console.log(props.route.params.postId);\n      firebase.firestore().collection('posts').doc(props.route.params.uid).collection('userPosts').doc(props.route.params.postId).collection('comments').orderBy('creation', 'desc').get().then(function (snapshot) {\n        var comments = snapshot.docs.map(function (doc) {\n          var data = doc.data();\n          var id = doc.id;\n          return _objectSpread({\n            id: id\n          }, data);\n        });\n        matchUserToComment(comments);\n      });\n      setPostId(props.route.params.postId);\n    } else {\n      matchUserToComment(comments);\n    }\n  };\n\n  var onCommentSend = function onCommentSend() {\n    var textToSend = input;\n\n    if (input.length == 0) {\n      return;\n    }\n\n    setInput(\"\");\n    textInput.clear();\n    firebase.firestore().collection('posts').doc(props.route.params.uid).collection('userPosts').doc(props.route.params.postId).collection('comments').add({\n      creator: firebase.auth().currentUser.uid,\n      text: textToSend,\n      creation: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(function () {\n      setRefresh(true);\n    });\n  };\n\n  return React.createElement(View, {\n    style: [container.container, container.alignItemsCenter, utils.backgroundWhite],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: comments,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: utils.padding10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, item.user !== undefined ? React.createElement(View, {\n        style: container.horizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }\n      }, item.user.image == 'default' ? React.createElement(FontAwesome5, {\n        style: [utils.profileImageSmall],\n        name: \"user-circle\",\n        size: 35,\n        color: \"black\",\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Profile\", {\n            uid: item.user.uid\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 41\n        }\n      }) : React.createElement(Image, {\n        style: [utils.profileImageSmall],\n        source: {\n          uri: item.user.image\n        },\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Profile\", {\n            uid: item.user.uid\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 41\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: [utils.margin15Right, utils.margin5Bottom],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: [text.bold],\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Profile\", {\n            uid: item.user.uid\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 41\n        }\n      }, item.user.name), \" \", \"  \", item.text), React.createElement(Text, {\n        style: [text.grey, text.small, utils.margin5Bottom],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 37\n        }\n      }, timeDifference(new Date(), item.creation.toDate())))) : null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: [container.horizontal, utils.padding10, utils.alignItemsCenter, utils.backgroundWhite, utils.borderTopGray],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, props.currentUser.image == 'default' ? React.createElement(FontAwesome5, {\n    style: [utils.profileImageSmall],\n    name: \"user-circle\",\n    size: 35,\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }) : React.createElement(Image, {\n    style: [utils.profileImageSmall],\n    source: {\n      uri: props.currentUser.image\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }), React.createElement(TextInput, {\n    ref: function ref(input) {\n      setTextInput(input);\n    },\n    value: input,\n    style: [container.fillHorizontal],\n    placeholder: \"comment...\",\n    onChangeText: function onChangeText(input) {\n      return setInput(input);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: [container.horizontal, utils.padding15],\n    onPress: function onPress() {\n      return onCommentSend();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: utils.justifyCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: [text.bold, text.medium, text.deepskyblue],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, \"Post\")))));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    users: store.usersState.users,\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUsersData: fetchUsersData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Comment);","map":{"version":3,"sources":["/Users/cerigoff/instagram_redesign_release_v1/frontend/components/main/Comment.js"],"names":["React","useState","useEffect","FontAwesome5","firebase","require","connect","bindActionCreators","fetchUsersData","container","utils","text","timeDifference","Comment","props","comments","setComments","postId","setPostId","input","setInput","refresh","setRefresh","textInput","setTextInput","getComments","route","params","users","matchUserToComment","i","hasOwnProperty","user","find","x","uid","creator","undefined","length","console","log","firestore","collection","doc","orderBy","get","then","snapshot","docs","map","data","id","onCommentSend","textToSend","clear","add","auth","currentUser","creation","FieldValue","serverTimestamp","alignItemsCenter","backgroundWhite","item","padding10","horizontal","image","profileImageSmall","navigation","navigate","uri","margin15Right","margin5Bottom","bold","name","grey","small","Date","toDate","borderTopGray","fillHorizontal","padding15","justifyCenter","medium","deepskyblue","mapStateToProps","store","usersState","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View, Text, FlatList, Image, TextInput, TouchableOpacity } from 'react-native'\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nimport firebase from 'firebase'\nrequire('firebase/firestore')\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { fetchUsersData } from '../../redux/actions/index'\nimport { container, utils, text } from '../styles'\nimport { timeDifference } from '../utils'\n\nfunction Comment(props) {\n    const [comments, setComments] = useState([])\n    const [postId, setPostId] = useState(\"\")\n    const [input, setInput] = useState(\"\")\n    const [refresh, setRefresh] = useState(false)\n    const [textInput, setTextInput] = useState(null)\n\n    useEffect(() => {\n        getComments();\n    }, [props.route.params.postId, props.users, refresh])\n\n    const matchUserToComment = (comments) => {\n        for (let i = 0; i < comments.length; i++) {\n            if (comments[i].hasOwnProperty('user')) {\n                continue;\n            }\n\n            const user = props.users.find(x => x.uid === comments[i].creator)\n            if (user == undefined) {\n                props.fetchUsersData(comments[i].creator, false)\n            } else {\n                comments[i].user = user\n            }\n        }\n        setComments(comments)\n        setRefresh(false)\n    }\n    const getComments = () => {\n        if (props.route.params.postId !== postId || refresh) {\n            console.log(props.route.params.uid)\n            console.log(props.route.params.postId)\n            firebase.firestore()\n                .collection('posts')\n                .doc(props.route.params.uid)\n                .collection('userPosts')\n                .doc(props.route.params.postId)\n                .collection('comments')\n                .orderBy('creation', 'desc')\n                .get()\n                .then((snapshot) => {\n                    let comments = snapshot.docs.map(doc => {\n                        const data = doc.data();\n                        const id = doc.id;\n                        return { id, ...data }\n                    })\n                    matchUserToComment(comments)\n                })\n            setPostId(props.route.params.postId)\n        } else {\n            matchUserToComment(comments)\n        }\n    }\n    const onCommentSend = () => {\n        const textToSend = input;\n\n        if(input.length == 0){\n            return;\n        }\n        setInput(\"\")\n\n        textInput.clear()\n        firebase.firestore()\n            .collection('posts')\n            .doc(props.route.params.uid)\n            .collection('userPosts')\n            .doc(props.route.params.postId)\n            .collection('comments')\n            .add({\n                creator: firebase.auth().currentUser.uid,\n                text: textToSend,\n                creation: firebase.firestore.FieldValue.serverTimestamp()\n\n            }).then(() => {\n                setRefresh(true)\n            })\n    }\n\n    return (\n        <View style={[container.container, container.alignItemsCenter, utils.backgroundWhite]}>\n            <FlatList\n                numColumns={1}\n                horizontal={false}\n                data={comments}\n                renderItem={({ item }) => (\n                    <View style={utils.padding10}>\n                        {item.user !== undefined ?\n                            <View style={container.horizontal}>\n                                {item.user.image == 'default' ?\n                                    (\n                                        <FontAwesome5\n                                            style={[utils.profileImageSmall]}\n                                            name=\"user-circle\" size={35} color=\"black\"\n                                            onPress={() => props.navigation.navigate(\"Profile\", { uid: item.user.uid })} />\n\n\n                                    )\n                                    :\n                                    (\n                                        <Image\n                                            style={[utils.profileImageSmall]}\n                                            source={{\n                                                uri: item.user.image\n                                            }}\n                                            onPress={() => props.navigation.navigate(\"Profile\", { uid: item.user.uid })} />\n\n                                    )\n                                }\n                                <View>\n                                    <Text style={[utils.margin15Right, utils.margin5Bottom]}>\n\n                                        <Text style={[text.bold]}\n                                            onPress={() => props.navigation.navigate(\"Profile\", { uid: item.user.uid })}>\n                                            {item.user.name}\n                                        </Text>\n                                        {\" \"}  {item.text}\n                                    </Text>\n                                    <Text\n                                        style={[text.grey, text.small, utils.margin5Bottom]}>\n                                        {timeDifference(new Date(), item.creation.toDate())}\n                                    </Text>\n                                </View>\n\n\n                            </View>\n                            : null}\n\n\n                    </View>\n                )\n                }\n            />\n\n            < View style={[container.horizontal, utils.padding10, utils.alignItemsCenter, utils.backgroundWhite, utils.borderTopGray]} >\n                {\n                    props.currentUser.image == 'default' ?\n                        (\n                            <FontAwesome5\n                                style={[utils.profileImageSmall]}\n                                name=\"user-circle\" size={35} color=\"black\" />\n\n                        )\n                        :\n                        (\n                            <Image\n                                style={[utils.profileImageSmall]}\n                                source={{\n                                    uri: props.currentUser.image\n                                }}\n                            />\n                        )\n                }\n                < TextInput\n                    ref={input => { setTextInput(input) }}\n                    value={input}\n                    style={[container.fillHorizontal]}\n                    placeholder='comment...'\n                    onChangeText={(input) => setInput(input)} />\n\n                < TouchableOpacity\n                    style={[container.horizontal, utils.padding15]}\n                    onPress={() => onCommentSend()}>\n                    <View style={utils.justifyCenter}>\n                        <Text style={[text.bold, text.medium, text.deepskyblue]} >Post</Text>\n                    </View>\n                </TouchableOpacity >\n            </View >\n\n        </View >\n    )\n}\n\n\nconst mapStateToProps = (store) => ({\n    users: store.usersState.users,\n    currentUser: store.userState.currentUser\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUsersData }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchProps)(Comment);\n"]},"metadata":{},"sourceType":"module"}