{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/cerigoff/instagram_redesign_release_v1/frontend/components/main/chat/List.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUsersData } from \"../../../redux/actions/index\";\nimport { text, utils, container } from \"../../styles\";\nimport { timeDifference } from \"../../utils\";\n\nfunction Chat(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chats = _useState2[0],\n      setChats = _useState2[1];\n\n  useEffect(function () {\n    console.log(props.chats);\n\n    var _loop = function _loop(i) {\n      if (props.chats[i].hasOwnProperty('otherUser')) {\n        return \"continue\";\n      }\n\n      var otherUserId = void 0;\n\n      if (props.chats[i].users[0] == firebase.auth().currentUser.uid) {\n        otherUserId = props.chats[i].users[1];\n      } else {\n        otherUserId = props.chats[i].users[0];\n      }\n\n      var user = props.users.find(function (x) {\n        return x.uid === otherUserId;\n      });\n\n      if (user == undefined) {\n        props.fetchUsersData(comments[i].creator, false);\n      } else {\n        props.chats[i].otherUser = user;\n      }\n    };\n\n    for (var i = 0; i < props.chats.length; i++) {\n      var _ret = _loop(i);\n\n      if (_ret === \"continue\") continue;\n    }\n\n    setChats(props.chats);\n    console.log(props.chats);\n  }, [props.chats, props.users]);\n  return React.createElement(View, {\n    style: [container.container, container.alignItemsCenter, utils.backgroundWhite],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: chats,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, item.otherUser == null ? React.createElement(FontAwesome5, {\n        style: [utils.profileImageSmall],\n        name: \"user-circle\",\n        size: 35,\n        color: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }) : React.createElement(TouchableOpacity, {\n        style: [utils.padding15, container.horizontal],\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Chat\", {\n            user: item.otherUser\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }, React.createElement(View, {\n        style: container.horizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 37\n        }\n      }, item.otherUser.image == 'default' ? React.createElement(FontAwesome5, {\n        style: [utils.profileImageSmall],\n        name: \"user-circle\",\n        size: 35,\n        color: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 45\n        }\n      }) : React.createElement(Image, {\n        style: [utils.profileImageSmall],\n        source: {\n          uri: item.otherUser.image\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 49\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: [text.bold],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 41\n        }\n      }, item.otherUser.name), React.createElement(Text, {\n        numberOfLines: 1,\n        ellipsizeMode: \"tail\",\n        style: [utils.margin15Right, utils.margin5Bottom],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 41\n        }\n      }, item.lastMessage, \" \", \" \", item.lastMessageTimestamp == null ? React.createElement(Text, {\n        style: [text.grey, text.small, utils.margin5Bottom],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 49\n        }\n      }, \"Now\") : React.createElement(Text, {\n        style: [text.grey, text.small, utils.margin5Bottom],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 53\n        }\n      }, timeDifference(new Date(), item.lastMessageTimestamp.toDate()))))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    chats: store.userState.chats,\n    users: store.usersState.users\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUsersData: fetchUsersData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Chat);","map":{"version":3,"sources":["/Users/cerigoff/instagram_redesign_release_v1/frontend/components/main/chat/List.js"],"names":["React","useState","useEffect","FontAwesome5","firebase","require","connect","bindActionCreators","fetchUsersData","text","utils","container","timeDifference","Chat","props","chats","setChats","console","log","i","hasOwnProperty","otherUserId","users","auth","currentUser","uid","user","find","x","undefined","comments","creator","otherUser","length","alignItemsCenter","backgroundWhite","item","profileImageSmall","padding15","horizontal","navigation","navigate","image","uri","bold","name","margin15Right","margin5Bottom","lastMessage","lastMessageTimestamp","grey","small","Date","toDate","mapStateToProps","store","userState","usersState","mapDispatchProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAEA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,OAAOC,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,cAAT;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,SAAtB;AACA,SAASC,cAAT;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA,kBACSb,QAAQ,CAAC,EAAD,CADjB;AAAA;AAAA,MACVc,KADU;AAAA,MACHC,QADG;;AAEjBd,EAAAA,SAAS,CAAC,YAAM;AACZe,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,KAAlB;;AADY,+BAGHI,CAHG;AAIR,UAAIL,KAAK,CAACC,KAAN,CAAYI,CAAZ,EAAeC,cAAf,CAA8B,WAA9B,CAAJ,EAAgD;AAC5C;AACH;;AACD,UAAIC,WAAW,SAAf;;AACA,UAAIP,KAAK,CAACC,KAAN,CAAYI,CAAZ,EAAeG,KAAf,CAAqB,CAArB,KAA2BlB,QAAQ,CAACmB,IAAT,GAAgBC,WAAhB,CAA4BC,GAA3D,EAAgE;AAC5DJ,QAAAA,WAAW,GAAGP,KAAK,CAACC,KAAN,CAAYI,CAAZ,EAAeG,KAAf,CAAqB,CAArB,CAAd;AACH,OAFD,MAEO;AACHD,QAAAA,WAAW,GAAGP,KAAK,CAACC,KAAN,CAAYI,CAAZ,EAAeG,KAAf,CAAqB,CAArB,CAAd;AACH;;AAED,UAAMI,IAAI,GAAGZ,KAAK,CAACQ,KAAN,CAAYK,IAAZ,CAAiB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACH,GAAF,KAAUJ,WAAd;AAAA,OAAlB,CAAb;;AACA,UAAIK,IAAI,IAAIG,SAAZ,EAAuB;AACnBf,QAAAA,KAAK,CAACN,cAAN,CAAqBsB,QAAQ,CAACX,CAAD,CAAR,CAAYY,OAAjC,EAA0C,KAA1C;AACH,OAFD,MAEO;AACHjB,QAAAA,KAAK,CAACC,KAAN,CAAYI,CAAZ,EAAea,SAAf,GAA2BN,IAA3B;AACH;AAnBO;;AAGZ,SAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACC,KAAN,CAAYkB,MAAhC,EAAwCd,CAAC,EAAzC,EAA6C;AAAA,uBAApCA,CAAoC;;AAAA,+BAErC;AAeP;;AAEDH,IAAAA,QAAQ,CAACF,KAAK,CAACC,KAAP,CAAR;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,KAAlB;AAKH,GA7BQ,EA6BN,CAACD,KAAK,CAACC,KAAP,EAAcD,KAAK,CAACQ,KAApB,CA7BM,CAAT;AAgCA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACX,SAAS,CAACA,SAAX,EAAsBA,SAAS,CAACuB,gBAAhC,EAAkDxB,KAAK,CAACyB,eAAxD,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,UAAU,EAAE,CADhB;AAEI,IAAA,UAAU,EAAE,KAFhB;AAGI,IAAA,IAAI,EAAEpB,KAHV;AAII,IAAA,UAAU,EAAE;AAAA,UAAGqB,IAAH,QAAGA,IAAH;AAAA,aAER,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,IAAI,CAACJ,SAAL,IAAkB,IAAlB,GACG,oBAAC,YAAD;AACI,QAAA,KAAK,EAAE,CAACtB,KAAK,CAAC2B,iBAAP,CADX;AAEI,QAAA,IAAI,EAAC,aAFT;AAEuB,QAAA,IAAI,EAAE,EAF7B;AAEiC,QAAA,KAAK,EAAC,OAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,GAOO,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE,CAAC3B,KAAK,CAAC4B,SAAP,EAAkB3B,SAAS,CAAC4B,UAA5B,CAAzB;AACI,QAAA,OAAO,EAAE;AAAA,iBAAMzB,KAAK,CAAC0B,UAAN,CAAiBC,QAAjB,CAA0B,MAA1B,EAAkC;AAAEf,YAAAA,IAAI,EAAEU,IAAI,CAACJ;AAAb,WAAlC,CAAN;AAAA,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAErB,SAAS,CAAC4B,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKH,IAAI,CAACJ,SAAL,CAAeU,KAAf,IAAwB,SAAxB,GACG,oBAAC,YAAD;AACI,QAAA,KAAK,EAAE,CAAChC,KAAK,CAAC2B,iBAAP,CADX;AAEI,QAAA,IAAI,EAAC,aAFT;AAEuB,QAAA,IAAI,EAAE,EAF7B;AAEiC,QAAA,KAAK,EAAC,OAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,GAOO,oBAAC,KAAD;AACI,QAAA,KAAK,EAAE,CAAC3B,KAAK,CAAC2B,iBAAP,CADX;AAEI,QAAA,MAAM,EAAE;AACJM,UAAAA,GAAG,EAAEP,IAAI,CAACJ,SAAL,CAAeU;AADhB,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATZ,CAHJ,EAsBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACjC,IAAI,CAACmC,IAAN,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BR,IAAI,CAACJ,SAAL,CAAea,IAA1C,CADJ,EAGI,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAE,CAArB;AAAwB,QAAA,aAAa,EAAC,MAAtC;AAA6C,QAAA,KAAK,EAAE,CAACnC,KAAK,CAACoC,aAAP,EAAsBpC,KAAK,CAACqC,aAA5B,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKX,IAAI,CAACY,WADV,OACwB,GADxB,EAEKZ,IAAI,CAACa,oBAAL,IAA6B,IAA7B,GAEG,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACxC,IAAI,CAACyC,IAAN,EAAYzC,IAAI,CAAC0C,KAAjB,EAAwBzC,KAAK,CAACqC,aAA9B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFH,GAIO,oBAAC,IAAD;AACI,QAAA,KAAK,EAAE,CAACtC,IAAI,CAACyC,IAAN,EAAYzC,IAAI,CAAC0C,KAAjB,EAAwBzC,KAAK,CAACqC,aAA9B,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKnC,cAAc,CAAC,IAAIwC,IAAJ,EAAD,EAAahB,IAAI,CAACa,oBAAL,CAA0BI,MAA1B,EAAb,CAFnB,CANZ,CAHJ,CAtBJ,CARZ,CAFQ;AAAA,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAkEH;;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAChC/B,IAAAA,WAAW,EAAE+B,KAAK,CAACC,SAAN,CAAgBhC,WADG;AAEhCT,IAAAA,KAAK,EAAEwC,KAAK,CAACC,SAAN,CAAgBzC,KAFS;AAGhCO,IAAAA,KAAK,EAAEiC,KAAK,CAACE,UAAN,CAAiBnC;AAHQ,GAAZ;AAAA,CAAxB;;AAKA,IAAMoC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD;AAAA,SAAcpD,kBAAkB,CAAC;AAAEC,IAAAA,cAAc,EAAdA;AAAF,GAAD,EAAqBmD,QAArB,CAAhC;AAAA,CAAzB;;AAEA,eAAerD,OAAO,CAACgD,eAAD,EAAkBI,gBAAlB,CAAP,CAA2C7C,IAA3C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View, Text, FlatList, Image, TouchableOpacity } from 'react-native'\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nimport firebase from 'firebase'\nrequire('firebase/firestore')\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { fetchUsersData } from '../../../redux/actions/index'\n\nimport { text, utils, container } from '../../styles'\nimport { timeDifference } from '../../utils'\n\nfunction Chat(props) {\n    const [chats, setChats] = useState([])\n    useEffect(() => {\n        console.log(props.chats)\n\n        for (let i = 0; i < props.chats.length; i++) {\n            if (props.chats[i].hasOwnProperty('otherUser')) {\n                continue;\n            }\n            let otherUserId;\n            if (props.chats[i].users[0] == firebase.auth().currentUser.uid) {\n                otherUserId = props.chats[i].users[1];\n            } else {\n                otherUserId = props.chats[i].users[0];\n            }\n\n            const user = props.users.find(x => x.uid === otherUserId)\n            if (user == undefined) {\n                props.fetchUsersData(comments[i].creator, false)\n            } else {\n                props.chats[i].otherUser = user\n            }\n        }\n\n        setChats(props.chats)\n\n        console.log(props.chats)\n\n\n\n\n    }, [props.chats, props.users])\n\n\n    return (\n        <View style={[container.container, container.alignItemsCenter, utils.backgroundWhite]}>\n            <FlatList\n                numColumns={1}\n                horizontal={false}\n                data={chats}\n                renderItem={({ item }) => (\n\n                    <View>\n                        {item.otherUser == null ? (\n                            <FontAwesome5\n                                style={[utils.profileImageSmall]}\n                                name=\"user-circle\" size={35} color=\"black\" />\n                        )\n                            :\n                            (\n                                <TouchableOpacity style={[utils.padding15, container.horizontal]}\n                                    onPress={() => props.navigation.navigate(\"Chat\", { user: item.otherUser })}>\n\n                                    <View style={container.horizontal}>\n\n                                        {item.otherUser.image == 'default' ? (\n                                            <FontAwesome5\n                                                style={[utils.profileImageSmall]}\n                                                name=\"user-circle\" size={35} color=\"black\" />\n                                        )\n                                            :\n                                            (\n                                                <Image\n                                                    style={[utils.profileImageSmall]}\n                                                    source={{\n                                                        uri: item.otherUser.image\n                                                    }} />\n                                            )}\n\n\n                                    </View>\n\n                                    <View>\n                                        <Text style={[text.bold]}>{item.otherUser.name}</Text>\n\n                                        <Text numberOfLines={1} ellipsizeMode='tail' style={[utils.margin15Right, utils.margin5Bottom]}>\n                                            {item.lastMessage} {\" \"}\n                                            {item.lastMessageTimestamp == null ? (\n\n                                                <Text style={[text.grey, text.small, utils.margin5Bottom]}>Now</Text>\n                                            ) : (\n                                                    <Text\n                                                        style={[text.grey, text.small, utils.margin5Bottom]}>\n                                                        {timeDifference(new Date(), item.lastMessageTimestamp.toDate())}\n                                                    </Text>\n                                                )}\n                                        </Text>\n                                    </View>\n\n\n                                </TouchableOpacity>\n                            )}\n\n                    </View>\n\n                )\n                }\n            />\n        </View >\n    )\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    chats: store.userState.chats,\n    users: store.usersState.users,\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUsersData }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchProps)(Chat);\n"]},"metadata":{},"sourceType":"module"}