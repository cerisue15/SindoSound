{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/cerigoff/instagram_redesign_release_v1/frontend/components/main/add/Save.js\";\nimport React, { useState, useLayoutEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { FontAwesome5, Feather } from '@expo/vector-icons';\nimport { Snackbar } from 'react-native-paper';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUserPosts } from \"../../../redux/actions/index\";\nimport firebase from 'firebase';\n\nrequire(\"firebase/firestore\");\n\nrequire(\"firebase/firebase-storage\");\n\nimport { container, utils, form, text, navbar } from \"../../styles\";\n\nfunction Save(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      caption = _useState2[0],\n      setCaption = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      uploading = _useState4[0],\n      setUploading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  useLayoutEffect(function () {\n    props.navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(Feather, {\n          style: navbar.image,\n          name: \"check\",\n          size: 24,\n          color: \"green\",\n          onPress: function onPress() {\n            uploadImage();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }\n        });\n      }\n    });\n  }, [caption]);\n\n  var uploadImage = function uploadImage() {\n    var uri, childPath, response, blob, task, taskProgress, taskCompleted, taskError;\n    return _regeneratorRuntime.async(function uploadImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!uploading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            setUploading(true);\n            uri = props.route.params.image;\n            childPath = \"post/\" + firebase.auth().currentUser.uid + \"/\" + Math.random().toString(36);\n            console.log(childPath);\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 8:\n            response = _context.sent;\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 11:\n            blob = _context.sent;\n            task = firebase.storage().ref().child(childPath).put(blob);\n\n            taskProgress = function taskProgress(snapshot) {\n              console.log(\"transferred: \" + snapshot.bytesTransferred);\n            };\n\n            taskCompleted = function taskCompleted() {\n              task.snapshot.ref.getDownloadURL().then(function (snapshot) {\n                savePostData(snapshot);\n              });\n            };\n\n            taskError = function taskError(snapshot) {\n              console.log(snapshot);\n              setUploading(false);\n              setError(true);\n            };\n\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var savePostData = function savePostData(downloadURL) {\n    firebase.firestore().collection('posts').doc(firebase.auth().currentUser.uid).collection(\"userPosts\").add({\n      downloadURL: downloadURL,\n      caption: caption,\n      likesCount: 0,\n      commentsCount: 0,\n      creation: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(function () {\n      props.fetchUserPosts();\n      props.navigation.popToTop();\n    }).catch(function (error) {\n      setUploading(false);\n      setError(true);\n    });\n  };\n\n  return React.createElement(View, {\n    style: [container.container, utils.backgroundWhite],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, uploading ? React.createElement(View, {\n    style: [container.container, utils.justifyCenter, utils.alignItemsCenter],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, React.createElement(ActivityIndicator, {\n    style: utils.marginBottom,\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: [text.bold, text.large],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"Upload in progress...\")) : React.createElement(View, {\n    style: [container.container],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: [container.container, utils.backgroundWhite, utils.padding15],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: [container.horizontal, utils.justifyCenter, utils.alignItemsCenter],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, props.currentUser.image == 'default' ? React.createElement(FontAwesome5, {\n    style: [utils.profileImageSmall],\n    name: \"user-circle\",\n    size: 35,\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 41\n    }\n  }) : React.createElement(Image, {\n    style: [utils.profileImageSmall],\n    source: {\n      uri: props.currentUser.image\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 41\n    }\n  }), React.createElement(TextInput, {\n    style: [container.fillHorizontal, container.input, container.container],\n    multiline: true,\n    placeholder: \"Write a Caption . . .\",\n    onChangeText: function onChangeText(caption) {\n      return setCaption(caption);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }), React.createElement(Image, {\n    style: container.imageSmall,\n    source: {\n      uri: props.route.params.image\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }))), React.createElement(Snackbar, {\n    visible: error,\n    duration: 2000,\n    onDismiss: function onDismiss() {\n      return setError(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, \"Something Went Wrong!\")));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUserPosts: fetchUserPosts\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Save);","map":{"version":3,"sources":["/Users/cerigoff/instagram_redesign_release_v1/frontend/components/main/add/Save.js"],"names":["React","useState","useLayoutEffect","FontAwesome5","Feather","Snackbar","connect","bindActionCreators","fetchUserPosts","firebase","require","container","utils","form","text","navbar","Save","props","caption","setCaption","uploading","setUploading","error","setError","navigation","setOptions","headerRight","image","uploadImage","uri","route","params","childPath","auth","currentUser","uid","Math","random","toString","console","log","fetch","response","blob","task","storage","ref","child","put","taskProgress","snapshot","bytesTransferred","taskCompleted","getDownloadURL","then","savePostData","taskError","on","downloadURL","firestore","collection","doc","add","likesCount","commentsCount","creation","FieldValue","serverTimestamp","popToTop","catch","backgroundWhite","justifyCenter","alignItemsCenter","marginBottom","bold","large","padding15","horizontal","profileImageSmall","fillHorizontal","input","imageSmall","mapStateToProps","store","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useLayoutEffect } from 'react'\nimport { View, TextInput, Image, Text, ActivityIndicator } from 'react-native'\nimport { FontAwesome5, Feather } from '@expo/vector-icons';\nimport { Snackbar } from 'react-native-paper';\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { fetchUserPosts } from '../../../redux/actions/index'\n\nimport firebase from 'firebase'\nrequire(\"firebase/firestore\")\nrequire(\"firebase/firebase-storage\")\n\n\nimport { container, utils, form, text, navbar } from '../../styles'\n\nfunction Save(props) {\n    const [caption, setCaption] = useState(\"\")\n    const [uploading, setUploading] = useState(false)\n    const [error, setError] = useState(false)\n\n\n    useLayoutEffect(() => {\n        props.navigation.setOptions({\n            headerRight: () => (\n                <Feather style={navbar.image} name=\"check\" size={24} color=\"green\" onPress={() => { uploadImage() }} />\n            ),\n        });\n    }, [caption]);\n    const uploadImage = async () => {\n        if (uploading) {\n            return;\n        }\n        setUploading(true)\n        const uri = props.route.params.image;\n        const childPath = `post/${firebase.auth().currentUser.uid}/${Math.random().toString(36)}`;\n        console.log(childPath)\n\n        const response = await fetch(uri);\n        const blob = await response.blob();\n\n        const task = firebase\n            .storage()\n            .ref()\n            .child(childPath)\n            .put(blob);\n\n        const taskProgress = snapshot => {\n            console.log(`transferred: ${snapshot.bytesTransferred}`)\n        }\n\n        const taskCompleted = () => {\n            task.snapshot.ref.getDownloadURL().then((snapshot) => {\n                savePostData(snapshot);\n            })\n        }\n\n        const taskError = snapshot => {\n            console.log(snapshot)\n            setUploading(false)\n            setError(true)\n\n        }\n\n        task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n    }\n\n    const savePostData = (downloadURL) => {\n        firebase.firestore()\n            .collection('posts')\n            .doc(firebase.auth().currentUser.uid)\n            .collection(\"userPosts\")\n            .add({\n                downloadURL,\n                caption,\n                likesCount: 0,\n                commentsCount: 0,\n                creation: firebase.firestore.FieldValue.serverTimestamp()\n            }).then((function () {\n                props.fetchUserPosts()\n                props.navigation.popToTop()\n            })).catch((error) => {\n                setUploading(false)\n                setError(true)\n\n            })\n    }\n    return (\n        <View style={[container.container, utils.backgroundWhite]}>\n            {uploading ? (\n\n                <View style={[container.container, utils.justifyCenter, utils.alignItemsCenter]}>\n                    <ActivityIndicator style={utils.marginBottom} size=\"large\" />\n                    <Text style={[text.bold, text.large]}>Upload in progress...</Text>\n                </View>\n            ) : (\n                    <View style={[container.container]}>\n                        <View style={[container.container, utils.backgroundWhite, utils.padding15]}>\n                            <View style={[container.horizontal, utils.justifyCenter, utils.alignItemsCenter]}>\n\n                                {props.currentUser.image == 'default' ?\n                                    (\n                                        <FontAwesome5\n                                            style={[utils.profileImageSmall]}\n                                            name=\"user-circle\" size={35} color=\"black\"\n                                        />\n\n                                    )\n                                    :\n                                    (\n                                        <Image\n                                            style={[utils.profileImageSmall]}\n                                            source={{\n                                                uri: props.currentUser.image\n                                            }}\n                                        />\n                                    )\n                                }\n                                <TextInput\n                                    style={[container.fillHorizontal, container.input, container.container]}\n                                    multiline={true}\n                                    placeholder=\"Write a Caption . . .\"\n                                    onChangeText={(caption) => setCaption(caption)}\n                                />\n\n                                <Image style={container.imageSmall} source={{ uri: props.route.params.image }} />\n                            </View>\n                        </View>\n                        <Snackbar\n                            visible={error}\n                            duration={2000}\n                            onDismiss={() => setError(false)}>\n                            Something Went Wrong!\n                        </Snackbar>\n                    </View>\n                )}\n\n        </View>\n\n    )\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser\n})\n\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUserPosts }, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatchProps)(Save);"]},"metadata":{},"sourceType":"module"}