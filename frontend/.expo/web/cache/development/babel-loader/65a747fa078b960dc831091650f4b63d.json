{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/cerigoff/instagram_redesign_release_v1/frontend/components/main/chat/Chat.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUserChats } from \"../../../redux/actions/index\";\nimport { text, utils, container, navbar } from \"../../styles\";\nimport { timeDifference } from \"../../utils\";\n\nfunction Chat(props) {\n  var _useState = useState(props.route.params.user),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      chat = _useState4[0],\n      setChat = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      messages = _useState6[0],\n      setMessages = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      input = _useState8[0],\n      setInput = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      textInput = _useState10[0],\n      setTextInput = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      flatList = _useState12[0],\n      setFlatList = _useState12[1];\n\n  useEffect(function () {\n    var chat = props.chats.find(function (el) {\n      return el.users.includes(props.route.params.user.uid);\n    });\n    setChat(chat);\n    props.navigation.setOptions({\n      headerTitle: function headerTitle() {\n        return React.createElement(View, {\n          style: [container.horizontal, utils.alignItemsCenter],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }\n        }, props.route.params.user.image == 'default' ? React.createElement(FontAwesome5, {\n          style: [utils.profileImageSmall],\n          name: \"user-circle\",\n          size: 35,\n          color: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }\n        }) : React.createElement(Image, {\n          style: [utils.profileImageSmall],\n          source: {\n            uri: props.currentUser.image\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }\n        }), React.createElement(Text, {\n          style: [text.bold, text.large],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }\n        }, props.route.params.user.username));\n      }\n    });\n\n    if (chat !== undefined) {\n      firebase.firestore().collection(\"chats\").doc(chat.id).collection(\"messages\").orderBy(\"creation\", \"asc\").onSnapshot(function (snapshot) {\n        var messages = snapshot.docs.map(function (doc) {\n          var data = doc.data();\n          var id = doc.id;\n          return _objectSpread({\n            id: id\n          }, data);\n        });\n        console.log(messages);\n        setMessages(messages);\n      });\n    } else {\n      createChat();\n    }\n  }, [props.route.params.user, props.chats]);\n\n  var createChat = function createChat() {\n    firebase.firestore().collection(\"chats\").add({\n      users: [firebase.auth().currentUser.uid, user.uid],\n      lastMessage: 'Send the first message',\n      lastMessageTimestamp: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(function () {\n      props.fetchUserChats();\n    });\n  };\n\n  var onSend = function onSend() {\n    var textToSend = input;\n\n    if (input.length == 0) {\n      return;\n    }\n\n    setInput(\"\");\n    textInput.clear();\n    console.log(chat);\n    firebase.firestore().collection('chats').doc(chat.id).collection('messages').add({\n      creator: firebase.auth().currentUser.uid,\n      text: textToSend,\n      creation: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    firebase.firestore().collection('chats').doc(chat.id).update({\n      lastMessage: textToSend,\n      lastMessageTimestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n  };\n\n  return React.createElement(View, {\n    style: [container.container, container.alignItemsCenter, utils.backgroundWhite],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: messages,\n    ref: function ref(_ref2) {\n      return setFlatList(_ref2);\n    },\n    onContentSizeChange: function onContentSizeChange() {\n      return flatList.scrollToEnd({\n        animated: true\n      });\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: [utils.padding10, container.container, item.creator == firebase.auth().currentUser.uid ? container.chatRight : container.chatLeft],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }, item.creator !== undefined && item.creation !== null ? React.createElement(View, {\n        style: container.horizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: [utils.margin5Bottom, text.white],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 37\n        }\n      }, item.text), React.createElement(Text, {\n        style: [text.grey, text.small, utils.margin5Bottom, text.whitesmoke],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 37\n        }\n      }, timeDifference(new Date(), item.creation.toDate())))) : null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: [container.horizontal, utils.padding10, utils.alignItemsCenter, utils.backgroundWhite, utils.borderTopGray],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, props.currentUser.image == 'default' ? React.createElement(FontAwesome5, {\n    style: [utils.profileImageSmall],\n    name: \"user-circle\",\n    size: 35,\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }) : React.createElement(Image, {\n    style: [utils.profileImageSmall],\n    source: {\n      uri: props.currentUser.image\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }), React.createElement(TextInput, {\n    ref: function ref(input) {\n      setTextInput(input);\n    },\n    value: input,\n    style: [container.fillHorizontal],\n    placeholder: \"Message...\",\n    onChangeText: function onChangeText(input) {\n      return setInput(input);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: [container.horizontal, utils.padding15],\n    onPress: function onPress() {\n      return onSend();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: utils.justifyCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: [text.bold, text.medium, text.deepskyblue],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, \"Send\")))));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    chats: store.userState.chats,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUserChats: fetchUserChats\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Chat);","map":{"version":3,"sources":["/Users/cerigoff/instagram_redesign_release_v1/frontend/components/main/chat/Chat.js"],"names":["React","useState","useEffect","FontAwesome5","firebase","require","connect","bindActionCreators","fetchUserChats","text","utils","container","navbar","timeDifference","Chat","props","route","params","user","setUser","chat","setChat","messages","setMessages","input","setInput","textInput","setTextInput","flatList","setFlatList","chats","find","el","users","includes","uid","navigation","setOptions","headerTitle","horizontal","alignItemsCenter","image","profileImageSmall","uri","currentUser","bold","large","username","undefined","firestore","collection","doc","id","orderBy","onSnapshot","snapshot","docs","map","data","console","log","createChat","add","auth","lastMessage","lastMessageTimestamp","FieldValue","serverTimestamp","then","onSend","textToSend","length","clear","creator","creation","update","backgroundWhite","ref","scrollToEnd","animated","item","padding10","chatRight","chatLeft","margin5Bottom","white","grey","small","whitesmoke","Date","toDate","borderTopGray","fillHorizontal","padding15","justifyCenter","medium","deepskyblue","mapStateToProps","store","userState","following","feed","usersState","usersFollowingLoaded","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View, Text, FlatList, Image, TextInput, TouchableOpacity } from 'react-native'\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport firebase from 'firebase'\nrequire('firebase/firestore')\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { fetchUserChats } from '../../../redux/actions/index'\n\nimport { text, utils, container, navbar } from '../../styles'\nimport { timeDifference } from '../../utils'\n\nfunction Chat(props) {\n    const [user, setUser] = useState(props.route.params.user)\n    const [chat, setChat] = useState(null)\n    const [messages, setMessages] = useState([])\n    const [input, setInput] = useState(\"\")\n    const [textInput, setTextInput] = useState(null)\n    const [flatList, setFlatList] = useState(null)\n    \n\n    useEffect(() => {\n        const chat = props.chats.find(el => el.users.includes(props.route.params.user.uid));\n        setChat(chat)\n\n\n        props.navigation.setOptions({\n            headerTitle: () =>\n                <View style={[container.horizontal, utils.alignItemsCenter]}>\n                    {\n                        props.route.params.user.image == 'default' ?\n                            (\n                                <FontAwesome5\n                                    style={[utils.profileImageSmall]}\n                                    name=\"user-circle\" size={35} color=\"black\" />\n\n                            )\n                            :\n                            (\n                                <Image\n                                    style={[utils.profileImageSmall]}\n                                    source={{\n                                        uri: props.currentUser.image\n                                    }}\n                                />\n                            )\n                    }\n                    <Text style={[text.bold, text.large]}>{props.route.params.user.username}</Text>\n                </View>\n        });\n\n        if (chat !== undefined) {\n            firebase.firestore()\n                .collection(\"chats\")\n                .doc(chat.id)\n                .collection(\"messages\")\n                .orderBy(\"creation\", \"asc\")\n                .onSnapshot((snapshot) => {\n                    let messages = snapshot.docs.map(doc => {\n                        const data = doc.data();\n                        const id = doc.id;\n                        return { id, ...data }\n                    })\n                    console.log(messages)\n\n                    setMessages(messages)\n                })\n        } else {\n            createChat()\n        }\n\n    }, [props.route.params.user, props.chats])\n\n    const createChat = () => {\n        firebase.firestore()\n            .collection(\"chats\")\n            .add({\n                users: [firebase.auth().currentUser.uid, user.uid],\n                lastMessage: 'Send the first message',\n                lastMessageTimestamp: firebase.firestore.FieldValue.serverTimestamp()\n            }).then(() => {\n                props.fetchUserChats()\n            })\n    }\n    const onSend = () => {\n        const textToSend = input;\n\n        if(input.length == 0){\n            return;\n        }\n        setInput(\"\")\n\n        textInput.clear()\n\n        console.log(chat)\n        firebase.firestore()\n            .collection('chats')\n            .doc(chat.id)\n            .collection('messages')\n            .add({\n                creator: firebase.auth().currentUser.uid,\n                text: textToSend,\n                creation: firebase.firestore.FieldValue.serverTimestamp()\n            })\n        firebase.firestore()\n            .collection('chats')\n            .doc(chat.id)\n            .update({\n                lastMessage: textToSend,\n                lastMessageTimestamp: firebase.firestore.FieldValue.serverTimestamp()\n            })\n\n    }\n\n    return (\n        <View style={[container.container, container.alignItemsCenter, utils.backgroundWhite]}>\n            <FlatList\n                numColumns={1}\n                horizontal={false}\n                data={messages}\n                ref={ref => setFlatList(ref)}\n                onContentSizeChange={() => flatList.scrollToEnd({animated: true})}\n                renderItem={({ item }) => (\n                    <View style={[utils.padding10, container.container, item.creator == firebase.auth().currentUser.uid ? container.chatRight : container.chatLeft]}>\n                        {item.creator !== undefined && item.creation !== null ?\n                            <View style={container.horizontal}>\n                                <View>\n                                    <Text style={[utils.margin5Bottom, text.white]}>\n                                        {item.text}\n                                    </Text>\n                                    <Text\n                                        style={[text.grey, text.small, utils.margin5Bottom, text.whitesmoke]}>\n                                        {timeDifference(new Date(), item.creation.toDate())}\n                                    </Text>\n                                </View>\n\n\n                            </View>\n                            : null}\n\n\n                    </View>\n                )\n                }\n            />\n\n            < View style={[container.horizontal, utils.padding10, utils.alignItemsCenter, utils.backgroundWhite, utils.borderTopGray]} >\n                {\n                    props.currentUser.image == 'default' ?\n                        (\n                            <FontAwesome5\n                                style={[utils.profileImageSmall]}\n                                name=\"user-circle\" size={35} color=\"black\" />\n\n                        )\n                        :\n                        (\n                            <Image\n                                style={[utils.profileImageSmall]}\n                                source={{\n                                    uri: props.currentUser.image\n                                }}\n                            />\n                        )\n                }\n                < TextInput\n                    ref={input => { setTextInput(input) }}\n                    value={input}\n                    style={[container.fillHorizontal]}\n                    placeholder='Message...'\n                    onChangeText={(input) => setInput(input)} />\n\n                < TouchableOpacity\n                    style={[container.horizontal, utils.padding15]}\n                    onPress={() => onSend()}>\n                    <View style={utils.justifyCenter}>\n                        <Text style={[text.bold, text.medium, text.deepskyblue]} >Send</Text>\n                    </View>\n                </TouchableOpacity >\n            </View >\n\n        </View >\n    )\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    chats: store.userState.chats,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded,\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUserChats }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchProps)(Chat);\n"]},"metadata":{},"sourceType":"module"}