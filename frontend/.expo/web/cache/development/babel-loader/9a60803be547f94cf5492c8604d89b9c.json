{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/cerigoff/instagram_redesign_release_v1/frontend/components/main/Edit.js\";\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Feather } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { connect } from 'react-redux';\nimport { container, form, utils, navbar, text } from \"../styles\";\n\nvar account = require(\"../../assets/account.svg\");\n\nfunction Edit(props) {\n  var _useState = useState(props.currentUser.name),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(props.currentUser.description),\n      _useState4 = _slicedToArray(_useState3, 2),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var _useState5 = useState(props.currentUser.image),\n      _useState6 = _slicedToArray(_useState5, 2),\n      image = _useState6[0],\n      setImage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imageChanged = _useState8[0],\n      setImageChanged = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      hasGalleryPermission = _useState10[0],\n      setHasGalleryPermission = _useState10[1];\n\n  console.log({\n    name: name\n  });\n\n  var onLogout = function onLogout() {\n    firebase.auth().signOut();\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      var galleryStatus;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n            case 2:\n              galleryStatus = _context.sent;\n              setHasGalleryPermission(galleryStatus.status === 'granted');\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  useLayoutEffect(function () {\n    props.navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(Feather, {\n          style: navbar.image,\n          name: \"check\",\n          size: 24,\n          color: \"green\",\n          onPress: function onPress() {\n            console.log({\n              name: name,\n              description: description\n            });\n            Save();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }\n        });\n      }\n    });\n  }, [props.navigation, name, description, image, imageChanged]);\n\n  var pickImage = function pickImage() {\n    var galleryStatus, result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n          case 2:\n            galleryStatus = _context2.sent;\n            setHasGalleryPermission(galleryStatus.status === 'granted');\n\n            if (!hasGalleryPermission) {\n              _context2.next = 11;\n              break;\n            }\n\n            console.log(\"asd\");\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [1, 1],\n              quality: 1\n            }));\n\n          case 8:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n              setImageChanged(true);\n            }\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var Save = function Save() {\n    var uri, childPath, response, blob, task, taskProgress, taskCompleted, taskError;\n    return _regeneratorRuntime.async(function Save$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log({\n              imageChanged: imageChanged,\n              image: image\n            });\n\n            if (!imageChanged) {\n              _context3.next = 18;\n              break;\n            }\n\n            uri = image;\n            childPath = \"profile/\" + firebase.auth().currentUser.uid;\n            console.log(childPath);\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 7:\n            response = _context3.sent;\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 10:\n            blob = _context3.sent;\n            task = firebase.storage().ref().child(childPath).put(blob);\n\n            taskProgress = function taskProgress(snapshot) {\n              console.log(\"transferred: \" + snapshot.bytesTransferred);\n            };\n\n            taskCompleted = function taskCompleted() {\n              task.snapshot.ref.getDownloadURL().then(function (snapshot) {\n                firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).update({\n                  name: name,\n                  description: description,\n                  image: snapshot\n                }).then(function () {\n                  props.navigation.goBack();\n                });\n                console.log(snapshot);\n              });\n            };\n\n            taskError = function taskError(snapshot) {\n              console.log(snapshot);\n            };\n\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n            _context3.next = 19;\n            break;\n\n          case 18:\n            saveData({\n              name: name,\n              description: description\n            });\n\n          case 19:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var saveData = function saveData(data) {\n    firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).update(data).then(function () {\n      props.navigation.goBack();\n    });\n  };\n\n  return React.createElement(View, {\n    style: container.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [utils.centerHorizontal, utils.marginBottom],\n    onPress: function onPress() {\n      return pickImage();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, image == 'default' ? React.createElement(Image, {\n    style: form.roundImage,\n    source: account,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }) : React.createElement(Image, {\n    style: form.roundImage,\n    source: {\n      uri: image\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: text.changePhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \"Change Profile Photo\")), React.createElement(TextInput, {\n    value: name,\n    style: form.textInput,\n    placeholder: \"Name\",\n    onChangeText: function onChangeText(name) {\n      return setName(name);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    value: description,\n    style: form.textInput,\n    placeholder: \"Description\",\n    onChangeText: function onChangeText(description) {\n      setDescription(description);\n      console.log(description);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Logout\",\n    onPress: function onPress() {\n      return onLogout();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, null)(Edit);","map":{"version":3,"sources":["/Users/cerigoff/instagram_redesign_release_v1/frontend/components/main/Edit.js"],"names":["React","useState","useEffect","useLayoutEffect","Feather","ImagePicker","firebase","require","connect","container","form","utils","navbar","text","account","Edit","props","currentUser","name","setName","description","setDescription","image","setImage","imageChanged","setImageChanged","hasGalleryPermission","setHasGalleryPermission","console","log","onLogout","auth","signOut","requestCameraRollPermissionsAsync","galleryStatus","status","navigation","setOptions","headerRight","Save","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","result","cancelled","uri","childPath","uid","fetch","response","blob","task","storage","ref","child","put","taskProgress","snapshot","bytesTransferred","taskCompleted","getDownloadURL","then","firestore","collection","doc","update","goBack","taskError","on","saveData","data","centerHorizontal","marginBottom","roundImage","changePhoto","textInput","mapStateToProps","store","userState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from 'react'\nimport { View, TextInput, Text, Image, Button, TouchableOpacity } from 'react-native'\nimport { Feather } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\n\nimport firebase from 'firebase'\nrequire('firebase/firestore')\nimport { connect } from 'react-redux'\n\nimport { container, form, utils, navbar, text } from '../styles'\nconst account = require('../../assets/account.svg')\n\n\nfunction Edit(props) {\n    const [name, setName] = useState(props.currentUser.name);\n    const [description, setDescription] = useState(props.currentUser.description);\n    const [image, setImage] = useState(props.currentUser.image);\n    const [imageChanged, setImageChanged] = useState(false);\n    const [hasGalleryPermission, setHasGalleryPermission] = useState(null);\n\n    console.log({ name })\n\n\n    const onLogout = () => {\n        firebase.auth().signOut();\n    }\n\n\n    useEffect(() => {\n        (async () => {\n            const galleryStatus = await ImagePicker.requestCameraRollPermissionsAsync();\n            setHasGalleryPermission(galleryStatus.status === 'granted');\n\n\n        })();\n    }, []);\n\n    useLayoutEffect(() => {\n        props.navigation.setOptions({\n            headerRight: () => (\n\n                <Feather style={navbar.image} name=\"check\" size={24} color=\"green\" onPress={() => { console.log({ name, description }); Save() }} />\n            ),\n        });\n    }, [props.navigation, name, description, image, imageChanged]);\n\n\n    const pickImage = async () => {\n        const galleryStatus = await ImagePicker.requestCameraRollPermissionsAsync();\n        setHasGalleryPermission(galleryStatus.status === 'granted');\n\n        if (hasGalleryPermission) {\n            console.log(\"asd\")\n            let result = await ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.Images,\n                allowsEditing: true,\n                aspect: [1, 1],\n                quality: 1,\n            });\n            console.log(result);\n\n            if (!result.cancelled) {\n                setImage(result.uri);\n                setImageChanged(true);\n            }\n        }\n    };\n\n\n    const Save = async () => {\n        console.log({ imageChanged, image })\n        if (imageChanged) {\n            const uri = image;\n            const childPath = `profile/${firebase.auth().currentUser.uid}`;\n            console.log(childPath)\n\n            const response = await fetch(uri);\n            const blob = await response.blob();\n\n            const task = firebase\n                .storage()\n                .ref()\n                .child(childPath)\n                .put(blob);\n\n            const taskProgress = snapshot => {\n                console.log(`transferred: ${snapshot.bytesTransferred}`)\n            }\n\n            const taskCompleted = () => {\n                task.snapshot.ref.getDownloadURL().then((snapshot) => {\n\n                    firebase.firestore().collection(\"users\")\n                        .doc(firebase.auth().currentUser.uid)\n                        .update({\n                            name,\n                            description,\n                            image: snapshot,\n                        }).then(() => {\n                            props.navigation.goBack()\n                        })\n                    console.log(snapshot)\n                })\n            }\n\n            const taskError = snapshot => {\n                console.log(snapshot)\n            }\n\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n        } else {\n            saveData({\n                name,\n                description,\n            })\n        }\n    }\n\n    const saveData = (data) => {\n        firebase.firestore().collection(\"users\")\n            .doc(firebase.auth().currentUser.uid)\n            .update(data).then(() => {\n                props.navigation.goBack()\n            })\n    }\n\n    return (\n        <View style={container.form}>\n\n            <TouchableOpacity style={[utils.centerHorizontal, utils.marginBottom]} onPress={() => pickImage()} >\n                {image == 'default' ?\n                    (\n                        <Image\n                            style={form.roundImage}\n                            source={account}\n                        />\n                    )\n                    :\n                    (\n                        <Image\n                            style={form.roundImage}\n                            source={{\n                                uri: image\n                            }}\n                        />\n                    )\n                }\n                <Text style={text.changePhoto}>Change Profile Photo</Text>\n            </TouchableOpacity>\n\n            <TextInput\n                value={name}\n                style={form.textInput}\n                placeholder=\"Name\"\n                onChangeText={(name) => setName(name)}\n            />\n            <TextInput\n                value={description}\n                style={form.textInput}\n                placeholder=\"Description\"\n                onChangeText={(description) => { setDescription(description); console.log(description) }}\n            />\n            <Button\n                title=\"Logout\"\n                onPress={() => onLogout()} />\n        </View>\n\n    )\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n})\nexport default connect(mapStateToProps, null)(Edit);\n"]},"metadata":{},"sourceType":"module"}